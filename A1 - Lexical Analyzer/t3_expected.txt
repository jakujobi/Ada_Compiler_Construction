Token(type='MODULE', lexeme='MODULE', value=None)
Token(type='ID', lexeme='COMPLEXEXAMPLE', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='PROCEDURE', lexeme='PROCEDURE', value=None)
Token(type='ID', lexeme='MAIN', value=None)
Token(type='IS', lexeme='IS', value=None)
Token(type='CONSTANT', lexeme='CONSTANT', value=None)
Token(type='ID', lexeme='PI', value=None)
Token(type='COLON', lexeme=':', value=None)
Token(type='FLOAT', lexeme='FLOAT', value=None)
Token(type='ASSIGN', lexeme=':=', value=None)
Token(type='REAL', lexeme='3.14159', value=3.14159)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='ID', lexeme='X', value=None)
Token(type='COMMA', lexeme=',', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='COLON', lexeme=':', value=None)
Token(type='INTEGER', lexeme='INTEGER', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='BEGIN', lexeme='BEGIN', value=None)
Token(type='ID', lexeme='X', value=None)
Token(type='ASSIGN', lexeme=':=', value=None)
Token(type='NUM', lexeme='10', value=10)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='ASSIGN', lexeme=':=', value=None)
Token(type='ID', lexeme='X', value=None)
Token(type='MULOP', lexeme='*', value=None)
Token(type='NUM', lexeme='2', value=2)
Token(type='ADDOP', lexeme='+', value=None)
Token(type='NUM', lexeme='5', value=5)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='WHILE', lexeme='WHILE', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='RELOP', lexeme='>', value=None)
Token(type='ID', lexeme='X', value=None)
Token(type='LOOP', lexeme='LOOP', value=None)
Token(type='IF', lexeme='IF', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='MULOP', lexeme='mod', value=None)
Token(type='NUM', lexeme='2', value=2)
Token(type='RELOP', lexeme='=', value=None)
Token(type='NUM', lexeme='0', value=0)
Token(type='THEN', lexeme='THEN', value=None)
Token(type='PUT', lexeme='PUT', value=None)
Token(type='SYMBOL', lexeme='(', value=None)
Token(type='LITERAL', lexeme='"Even Number: "', value='Even Number: ')
Token(type='ADDOP', lexeme='&', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='SYMBOL', lexeme=')', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='ELSE', lexeme='ELSE', value=None)
Token(type='PUT', lexeme='PUT', value=None)
Token(type='SYMBOL', lexeme='(', value=None)
Token(type='LITERAL', lexeme='"Odd Number: "', value='Odd Number: ')
Token(type='ADDOP', lexeme='&', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='SYMBOL', lexeme=')', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='END', lexeme='END', value=None)
Token(type='IF', lexeme='IF', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='ASSIGN', lexeme=':=', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='ADDOP', lexeme='-', value=None)
Token(type='NUM', lexeme='1', value=1)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='END', lexeme='END', value=None)
Token(type='LOOP', lexeme='LOOP', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='PROCEDURE', lexeme='PROCEDURE', value=None)
Token(type='ID', lexeme='INNERPROCEDURE', value=None)
Token(type='IS', lexeme='IS', value=None)
Token(type='ID', lexeme='Z', value=None)
Token(type='COLON', lexeme=':', value=None)
Token(type='INTEGER', lexeme='INTEGER', value=None)
Token(type='ASSIGN', lexeme=':=', value=None)
Token(type='NUM', lexeme='100', value=100)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='BEGIN', lexeme='BEGIN', value=None)
Token(type='ID', lexeme='Z', value=None)
Token(type='ASSIGN', lexeme=':=', value=None)
Token(type='ID', lexeme='Z', value=None)
Token(type='MULOP', lexeme='/', value=None)
Token(type='NUM', lexeme='2', value=2)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='PUT', lexeme='PUT', value=None)
Token(type='SYMBOL', lexeme='(', value=None)
Token(type='LITERAL', lexeme='"Inner Z Value: "', value='Inner Z Value: ')
Token(type='ADDOP', lexeme='&', value=None)
Token(type='ID', lexeme='Z', value=None)
Token(type='SYMBOL', lexeme=')', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='END', lexeme='END', value=None)
Token(type='ID', lexeme='INNERPROCEDURE', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='ID', lexeme='INNERPROCEDURE', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='PUT', lexeme='PUT', value=None)
Token(type='SYMBOL', lexeme='(', value=None)
Token(type='LITERAL', lexeme='"Final Values: X="', value='Final Values: X=')
Token(type='ADDOP', lexeme='&', value=None)
Token(type='ID', lexeme='X', value=None)
Token(type='ADDOP', lexeme='&', value=None)
Token(type='LITERAL', lexeme='", Y="', value=', Y=')
Token(type='ADDOP', lexeme='&', value=None)
Token(type='ID', lexeme='Y', value=None)
Token(type='SYMBOL', lexeme=')', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
Token(type='END', lexeme='END', value=None)
Token(type='ID', lexeme='MAIN', value=None)
Token(type='SYMBOL', lexeme=';', value=None)
